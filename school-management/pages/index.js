import Head from 'next/head'
import Navbar from '../components/Navbar'
import {useForm} from 'react-hook-form'
import { EMAIL_REGEX_VALIDATION, PHONE_REGEX_VALIDATION } from '../lib/lib'
import { indianStates } from '../lib/lib'
export default function Home() {

  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm();

  const onSubmit = async (data) => {
    const file = data.image[0].name;
    try {
      const response = await fetch('/api/submitForm', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
      });

      const responseData = await response.json();
      console.log(responseData); // Handle success or error response from the server
    } catch (error) {
      console.error('Error:', error);
    }
    console.log(file);
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar/>
      <div className="container pt-5">
        <form className="row g-3" onSubmit={handleSubmit(onSubmit)}>
          <div className="col-md-12">
            <label for="SchoolName" className="form-label">School Name</label>
            <input type="text" className="form-control" {...register("schoolName", {required: true, minLength:3})} />
            {errors.schoolName && (
              <span className='errormsg'>
                Should be atleast 3 charaters
              </span>
            )}
          </div>
          <div className="col-md-6">
            <label for="Email" className="form-label">Email</label>
            <input type="email" className="form-control" {...register("email", {required: true, pattern: EMAIL_REGEX_VALIDATION,})} />
            {errors.email && (
              <span className='errormsg'>
                Enter valid email address
              </span>
            )}
          </div>
          <div className="col-md-6">
            <label for="Image" className="form-label">School Photo</label>
            <input className="form-control" type="file" {...register("image", {required: true, 
              validate: {
                validFileType: (value) =>
                  ['image/jpeg', 'image/jpg', 'image/png', 'image/gif'].includes(value[0]?.type),
                },
                })}
              accept="image/jpeg, 'image/jpg', image/png, image/gif" />
              {errors.image && (
              <span className='errormsg'>
                Upload valid image
              </span>
            )}
          </div>
          <div className="col-12">
            <label for="Address" className="form-label">Address</label>
            <input type="text" className="form-control" {...register("address", {required: true, minLength:5,})} />
            {errors.address && (
              <span className='errormsg'>
                Enter complete address
              </span>
            )}
          </div>
          <div className="col-md-6">
            <label for="City" className="form-label" >City</label>
            <input type="text" className="form-control" {...register("city", {required: true, minLength:3,})} />
            {errors.email && (
              <span className='errormsg'>
                Should be atleast 3 characters
              </span>
            )}
          </div>
          <div className="col-md-4">
            <label for="State" className="form-label">State</label>
            <select className="form-select" {...register("city", {required: true})}>
              <option selected>Choose...</option>
              {indianStates.map((state, index) => (
                <option key={index} value={state}>
                  {state}
                </option>
              ))}
            </select>
          </div>
          <div className="col-md-2">
            <label for="mobile" className="form-label">Mobile</label>
            <input type="tel" className="form-control" {...register("phone", {required: true, pattern: PHONE_REGEX_VALIDATION,})} />
            {errors.email && (
              <span className='errormsg'>
                Enter valid phone number
              </span>
            )}
          </div>
          <div className="col-12">
            <button type="submit" name="insert" id="insert" className="btn btn-primary">Submit</button>
          </div>
        </form>
      </div>
  </>
  )
}
